{"version":3,"sources":["components/Nav/index.js","components/AddItem/index.js","components/TodoItem/index.js","components/TodoList/index.js","components/App/index.js","index.js"],"names":["Nav","id","state","items","label","to","icon","visible","this","props","countAll","countActive","countFavorites","countDone","elements","filter","element","map","count","classIcon","className","exact","activeClassName","Component","AddItem","value","favorites","changeValue","e","setState","target","changeFavs","handleSubmit","preventDefault","addNewItem","onSubmit","type","placeholder","onChange","title","checked","TodoItem","data","onToggleDone","onToggleFavorites","deleteItem","done","classListOfCheckbox","classListOfFavorites","onClick","TodoList","length","App","createNewData","property","newArr","newItem","createElement","slice","localStorage","getItem","getLocalStorage","setLocalStorage","setItem","JSON","stringify","parse","activeData","favoritesData","doneData","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da6551c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport './nav.css';\r\n\r\nexport default class Nav extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.id = 0;\r\n\r\n    this.state = {\r\n      items: [\r\n        {label: 'Все задачи', to: '/', icon: 'fas fa-home', visible: true, id: this.id++},\r\n        {label: 'Активные', to: '/active', icon: 'fas fa-sun', visible: true, id: this.id++},\r\n        {label: 'На сегодня', to: '/today', icon: 'fas fa-sun', visible: false, id: this.id++},\r\n        {label: 'Важные', to: '/favorites', icon: 'far fa-star', visible: true, id: this.id++},\r\n        {label: 'Завершенные', to: '/done', icon: 'fas fa-check', visible: true, id: this.id++},\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { items } = this.state;\r\n    const { countAll, countActive, countFavorites, countDone } = this.props;\r\n\r\n    const elements = items.filter((element) => element.visible)\r\n      .map((element) => {\r\n        const { label, to, icon, id } = element;\r\n        const classIcon = `${icon} nav__icon`;\r\n        let count;\r\n\r\n        switch(to) {\r\n          case '/':\r\n            count = countAll;\r\n            break;\r\n          case '/active':\r\n            count = countActive;\r\n            break;\r\n          case '/favorites':\r\n            count = countFavorites;\r\n            break;\r\n          case '/done':\r\n            count = countDone;\r\n            break;\r\n          default:\r\n            count = 0;\r\n        }\r\n\r\n        return (\r\n          <li className=\"nav__item\" key={id}>\r\n            <NavLink\r\n              to={to}\r\n              exact\r\n              className='nav__link'\r\n              activeClassName=\"nav__link_active\">\r\n              <span className={classIcon}></span>\r\n              {label}\r\n              <span className='nav__count'>{count}</span>\r\n            </NavLink>\r\n          </li>\r\n        );\r\n      })\r\n\r\n    return (\r\n      <nav className=\"nav\">\r\n        <ul className=\"nav__list\">\r\n          { elements }\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport './add-item.css'\r\n\r\nexport default class AddItem extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: '',\r\n      favorites: false\r\n    };\r\n\r\n    this.changeValue = (e) => {\r\n      this.setState({\r\n        value: e.target.value\r\n      });\r\n    };\r\n\r\n    this.changeFavs = () => {\r\n      this.setState(({ favorites }) => {\r\n        return {\r\n          favorites: !favorites\r\n        }\r\n      });\r\n    };\r\n\r\n    this.handleSubmit = (e) => {\r\n      const { value, favorites } = this.state;\r\n\r\n      e.preventDefault();\r\n\r\n      if (value !== '') {\r\n        this.props.addNewItem(value, favorites);\r\n        this.setState({\r\n          value: '',\r\n          favorites: false\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"add-item\">\r\n        <form className=\"add-item__form\" onSubmit={this.handleSubmit}>\r\n          <div className=\"add-item__field\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"add-item__input\" \r\n              value={this.state.value}\r\n              placeholder='Добавить задачу'\r\n              onChange={this.changeValue} />\r\n          </div>\r\n          <label className=\"add-item__favorites\" title=\"Отметить как важную\">\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={this.changeFavs}\r\n              checked={this.state.favorites} />\r\n            <span></span>\r\n          </label>\r\n          <button className=\"add-item__submit\">Добавить</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\n\r\nimport './todoitem.css';\r\n\r\nconst TodoItem = ({ data, onToggleDone, onToggleFavorites, deleteItem }) => {\r\n  const { label, done, favorites, id } = data;\r\n\r\n  let classListOfCheckbox = 'todoitem__checkbox';\r\n  if (done) {\r\n    classListOfCheckbox += ' todoitem__checkbox_isChecked';\r\n  }\r\n\r\n  let classListOfFavorites = 'todoitem__favorites';\r\n  if (favorites) {\r\n    classListOfFavorites += ' todoitem__favorites_isChecked';\r\n  }\r\n\r\n  return (\r\n    <li className=\"todoitem\">\r\n      <button\r\n        className={classListOfCheckbox}\r\n        onClick={() => onToggleDone(id)}\r\n        title=\"Отметить как завершенную\"></button>\r\n      <div className=\"todoitem__text\">{label}</div>\r\n      <button\r\n        className=\"todoitem__delete\"\r\n        onClick={() => deleteItem(id)}\r\n        title=\"Удалить\"></button>\r\n      <button\r\n        className={classListOfFavorites}\r\n        onClick={() => onToggleFavorites(id)}\r\n        title=\"Отметить как важную\"></button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\n\r\nimport TodoItem from '../TodoItem';\r\n\r\nimport './todolist.css';\r\n\r\nexport default class TodoList extends Component {\r\n  render() {\r\n    const { data, onToggleDone, onToggleFavorites, deleteItem } = this.props;\r\n\r\n    if (data.length === 0) {\r\n      return (\r\n        <div className=\"todolist todolist_empty\">Задач нет</div>\r\n      );\r\n    }\r\n\r\n    const elements = data.map((element) => {\r\n      return <TodoItem\r\n                data={element}\r\n                onToggleDone={onToggleDone}\r\n                onToggleFavorites={onToggleFavorites}\r\n                deleteItem={deleteItem}\r\n                key={element.id}/>\r\n    });\r\n\r\n    return (\r\n      <ul className=\"todolist\">\r\n        { elements }\r\n      </ul>\r\n    );\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Nav from '../Nav';\r\nimport AddItem from '../AddItem';\r\nimport TodoList from '../TodoList';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.id = 0;\r\n    this.state = {\r\n      data: []\r\n    };\r\n\r\n    this.onToggleDone = (id) => {\r\n      this.setState(({data}) => {\r\n        return {\r\n          data: this.createNewData(id, 'done')\r\n        }\r\n      });\r\n    };\r\n\r\n    this.onToggleFavorites = (id, property) => {\r\n      this.setState(({data}) => {\r\n        return {\r\n          data: this.createNewData(id, 'favorites')\r\n        }\r\n      });\r\n    };\r\n\r\n    this.deleteItem = (id) => {\r\n      let newArr = this.state.data.filter((element) => {\r\n        return element.id !== id;\r\n      });\r\n      this.setState({\r\n        data: newArr\r\n      })\r\n    };\r\n\r\n    this.addNewItem = (label, favorites) => {\r\n      if (label !== '') {\r\n        const newItem = this.createElement(label, favorites);\r\n        let newArr = this.state.data.slice();\r\n        newArr = [newItem, ...newArr];\r\n        this.setState(({ data }) => {\r\n          return {\r\n            data: newArr\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(localStorage.getItem('data')) {\r\n      this.setState(this.getLocalStorage());\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setLocalStorage();\r\n  }\r\n\r\n  setLocalStorage() {\r\n    localStorage.setItem('data', JSON.stringify({...this.state}));\r\n  }\r\n\r\n  getLocalStorage() {\r\n    return JSON.parse(localStorage.getItem('data'));\r\n  }\r\n\r\n  createElement(label, favorites = false) {\r\n    return {\r\n      label,\r\n      done: false,\r\n      favorites,\r\n      id: this.id++\r\n    }\r\n  };\r\n\r\n  createNewData(id, property) {\r\n    return this.state.data.map((element) => {\r\n      if (element.id === id) {\r\n        element[property] = !element[property];\r\n      }\r\n      return element;\r\n    });\r\n  }\r\n\r\n  filter(data, property) {\r\n    return data.filter((element) => {\r\n      return element[property]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    const activeData = data.filter((element) => !element.done);\r\n    const favoritesData = this.filter(data.filter((element) => !element.done), 'favorites');\r\n    const doneData = this.filter(data, 'done');\r\n    const countAll = data.length;\r\n    const countActive = activeData.length;\r\n    const countFavorites = favoritesData.filter((element) => element.favorites).length;\r\n    const countDone = doneData.length;\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"app\">\r\n          <header className=\"header\">\r\n            <h1 className=\"header__title\">Список задач</h1>\r\n          </header>\r\n          <div className=\"columns\">\r\n            <aside className=\"sidebar\">\r\n              <Nav\r\n                countAll={countAll}\r\n                countActive={countActive}\r\n                countFavorites={countFavorites}\r\n                countDone={countDone} />\r\n            </aside>\r\n            <main className=\"main\">\r\n              <Route path=\"/\" exact>\r\n                <AddItem addNewItem={this.addNewItem} />\r\n                <TodoList\r\n                  data={data}\r\n                  onToggleDone={this.onToggleDone}\r\n                  onToggleFavorites={this.onToggleFavorites}\r\n                  deleteItem={this.deleteItem} />\r\n              </Route>\r\n              <Route path=\"/active\" exact>\r\n                <AddItem addNewItem={this.addNewItem} />\r\n                <TodoList\r\n                  data={activeData}\r\n                  onToggleDone={this.onToggleDone}\r\n                  onToggleFavorites={this.onToggleFavorites}\r\n                  deleteItem={this.deleteItem} />\r\n              </Route>\r\n              <Route path=\"/favorites\" exact>\r\n                <AddItem addNewItem={this.addNewItem} />\r\n                <TodoList\r\n                  data={favoritesData}\r\n                  onToggleDone={this.onToggleDone}\r\n                  onToggleFavorites={this.onToggleFavorites}\r\n                  deleteItem={this.deleteItem} />\r\n              </Route>\r\n              <Route path=\"/done\" exact>\r\n                <TodoList\r\n                  data={doneData}\r\n                  onToggleDone={this.onToggleDone}\r\n                  onToggleFavorites={this.onToggleFavorites}\r\n                  deleteItem={this.deleteItem} />\r\n              </Route>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}